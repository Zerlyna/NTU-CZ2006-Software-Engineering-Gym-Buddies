# openjdk:8-jdk-alpine image needed
.build_before_alpine: &buildbeforealpine
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - apk --no-cache add ca-certificates wget unzip
    - cd ci
    - mv sgerrand.rsa.pub /etc/apk/keys
    - apk add glibc.apk glibc-bin.apk # https://github.com/sgerrand/alpine-pkg-glibc
    - cd ..
    - mkdir "$ANDROID_HOME" .android && cd "$ANDROID_HOME"
    - wget -q -O sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
    - unzip -q sdk.zip
    - cd $CI_PROJECT_DIR
    - chmod +x ./gradlew
    - set +o pipefail
    - yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses
    - set -o pipefail
    - echo y | $ANDROID_HOME/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
    - echo y | $ANDROID_HOME/tools/bin/sdkmanager "platform-tools" >/dev/null
    - echo y | $ANDROID_HOME/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/nulls

# Actual CI Script
image: openjdk:8-jdk-alpine

include:
  - template: Code-Quality.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml

variables:
  ANDROID_COMPILE_SDK: "28"
  ANDROID_BUILD_TOOLS: "28.0.3"
  ANDROID_SDK_TOOLS:   "4333796"
  GIT_SUBMODULE_STRATEGY: recursive
  ANDROID_HOME: "/usr/local/android-sdk"

stages:
  - test

code_quality:
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    paths: [gl-code-quality-report.json]
    expire_in: 1 week

sast:
  before_script:
    - chmod +x ./gradlew
  variables:
    FAIL_NEVER: 1

Assemble Android App:
  stage: test
  <<: *buildbeforealpine
  script:
    - cat $GOOGLE_SERVICES > ./app/google-services.json
    - ./gradlew assembleDebug
  after_script:
    - rm -f .gradle/caches/modules-2/modules-2.lock
    - rm -fr .gradle/caches/*/plugin-resolution/
  artifacts:
    paths:
      - app/build/outputs/
  cache: # Cache GL
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .gradle/caches
      - .gradle/wrapper
